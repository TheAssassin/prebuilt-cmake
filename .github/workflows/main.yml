name: Main pipeline

on:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * 0'
  workflow_dispatch:

jobs:
  centos7-x86_64:
    name: CentOS 7 (x86_64)
    env:
      DIST: centos7
      ARCH: x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: CentOS 7 x86_64
          path: cmake*.tar*

  centos7-i386:
    name: CentOS 7 (i386)
    env:
      DIST: centos7
      ARCH: i386
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: CentOS 7 i386
          path: cmake*.tar*

  ubuntu_xenial-x86_64:
    name: Ubuntu xenial (x86_64)
    env:
      DIST: ubuntu_xenial
      ARCH: x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Ubuntu xenial x86_64
          path: cmake*.tar*

  ubuntu_xenial-i386:
    name: Ubuntu xenial (i386)
    env:
      DIST: ubuntu_xenial
      ARCH: i386
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Ubuntu xenial i386
          path: cmake*.tar*

  ubuntu_bionic-x86_64:
    name: Ubuntu bionic (x86_64)
    env:
      DIST: ubuntu_bionic
      ARCH: x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Ubuntu bionic x86_64
          path: cmake*.tar*

  ubuntu_bionic-i386:
    name: Ubuntu bionic (i386)
    env:
      DIST: ubuntu_bionic
      ARCH: i386
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Ubuntu bionic i386
          path: cmake*.tar*

  debian_oldstable-x86_64:
    name: Debian oldstable (x86_64)
    env:
      DIST: debian_oldstable
      ARCH: x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Debian oldstable x86_64
          path: cmake*.tar*

  debian_oldstable-i386:
    name: Debian oldstable (i386)
    env:
      DIST: debian_oldstable
      ARCH: i386
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Debian oldstable i386
          path: cmake*.tar*

  upload:
    name: Create release and upload artifacts
    needs:
      - centos7-x86_64
      - centos7-i386
      - ubuntu_xenial-x86_64
      - ubuntu_xenial-i386
      - debian_oldstable-x86_64
      - debian_oldstable-i386
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
          WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
          WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
          WEBDAV_RELEASE_NAME: continuous
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/cmake-v*.tar*
