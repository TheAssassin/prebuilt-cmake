name: Main pipeline

on:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * 0'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        # i386 was dropped in most recent distros
        ARCH: ['x86_64', 'i386']
        DIST: ['centos7', 'ubuntu_bionic', 'debian_oldstable']
        include:
          - ARCH: 'armhf'
            DIST: 'ubuntu_bionic'
          - ARCH: 'aarch64'
            DIST: 'ubuntu_bionic'
          - ARCH: 'x86_64'
            DIST: 'ubuntu_focal'
          - ARCH: 'aarch64'
            DIST: 'ubuntu_focal'
          - ARCH: 'armhf'
            DIST: 'ubuntu_focal'

    name: Build ${{ matrix.DIST }}  (${{ matrix.ARCH }})
    env:
      DIST: ${{ matrix.DIST }}
      ARCH: ${{ matrix.ARCH }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU integration for Docker
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.DIST }}-${{ matrix.ARCH }}.zip
          path: cmake*.tar*

  upload:
    name: Create release and upload artifacts
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
          WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
          WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
          WEBDAV_RELEASE_NAME: ""
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/cmake-v*.tar*
