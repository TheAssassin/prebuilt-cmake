# secondary pipeline to not interfere with or delay the main pipeline

name: ARM pipeline

on:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * 0'
  workflow_dispatch:

jobs:
  ubuntu_xenial-arm64v8:
    name: Ubuntu xenial (arm64v8)
    env:
      DIST: ubuntu_xenial
      ARCH: arm64v8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU integration for Docker
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Ubuntu xenial arm64v8
          path: cmake*.tar*

  ubuntu_xenial-armhf:
    name: Ubuntu xenial (arm64v8)
    env:
      DIST: ubuntu_xenial
      ARCH: armhf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU integration for Docker
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Build in Docker
        run: bash -ex build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Ubuntu xenial armhf
          path: cmake*.tar*

  upload:
    name: Create release and upload artifacts
    needs:
      - ubuntu_xenial-arm64v8
      - ubuntu_xenial-armhf
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/cmake-v*.tar*
